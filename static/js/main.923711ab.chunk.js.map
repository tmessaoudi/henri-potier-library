{"version":3,"sources":["domain/xebia.ts","component/BookCard.tsx","utils/offer.ts","layout/Header.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["process","DOMAIN_URL","fetcher","resourceUrl","fetch","then","res","json","BookCard","book","cart","setCart","isInCart","find","b","isbn","className","src","cover","alt","title","synopsis","join","price","onClick","filter","viewBox","fill","fillRule","d","clipRule","applyOffer","offer","value","sliceValue","findBestOffer","offers","sum","map","reduce","accumulator","currentValue","sort","a","type","sortOffer","Header","useState","setPrice","useEffect","length","App","useSWR","books","data","error","search","setSearch","booksToDisplay","toLocaleLowerCase","includes","htmlFor","onChange","e","target","id","placeholder","key","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.923711ab.chunk.js","sourcesContent":["export const {\n  DOMAIN_URL = 'http://henri-potier.xebia.fr'\n} = process.env\n\nexport const fetcher = (resourceUrl: string) => fetch(`${DOMAIN_URL}${resourceUrl}`).then(res => res.json())","import React from 'react';\nimport {Book} from 'App'\n\ninterface Props {\n  book: Book\n\n  cart: Array<Book>\n  setCart(books: Array<Book>): void\n}\n\nconst BookCard: React.FC<Props> = ({book, cart, setCart}) => {\n  const add = () => setCart([...cart, book])\n  const remove = () => setCart(cart.filter(b => b.isbn !== book.isbn))\n  const isInCart: boolean = !!cart.find(b => b.isbn === book.isbn)\n\n  return (\n    <div className=\"h-56 max-w-full flex mb-3\">\n      <img\n        src={book.cover} alt={book.title}\n        className=\"h-auto w-48 flex-none bg-cover  rounded-t-none rounded-l text-center overflow-hidden\"/>\n      <div\n        className={`border-r border-b border-l border-gray-400 border-l-0 border-t ${isInCart ? 'bg-gray-300':'bg-white'} rounded-b lg:rounded-r p-4 leading-normal flex`}>\n        <div className=\"flex flex-col flex-grow justify-between\">\n          <div className=\"text-gray-900 font-bold text-xl mb-2\">{book.title}</div>\n          <p className=\"text-gray-700 text-base mb-8 text-ellipsis\">{book.synopsis.join(' ')}</p>\n          <p className=\"text-xl text-gray-800 leading-3 font-semibold\"> Prix : {book.price} €</p>\n        </div>\n        <div className=\" pl-10 flex flex-col justify-around\">\n          <button onClick={isInCart ? remove : add}>\n            {isInCart ?\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-12 text-center\">\n                <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\"\n                      clipRule=\"evenodd\"/>\n              </svg> :\n              <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-12 text-center\">\n                <path fillRule=\"evenodd\"\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\n                      clipRule=\"evenodd\"/>\n              </svg>}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default BookCard","import {Book, Offer} from 'App'\n\nexport const applyOffer: { [id: string]: (price: number, offer: Offer) => number } = {\n  \"percentage\": (price: number, offer: Offer) => price * (100 - offer.value) / 100,\n  \"minus\": (price: number, offer: Offer) => price - offer.value,\n  \"slice\": (price: number, offer: Offer) => price >= offer.sliceValue! ? price - offer.value : price\n\n}\n\n\nexport const sortOffer = (cart: Array<Book>, offers: Array<Offer>) : Array<[Offer, number]> => {\n  const sum = cart\n    .map(book => book.price)\n    .reduce((accumulator, currentValue) => accumulator + currentValue)\n\n\n  return offers.sort((a, b) => applyOffer[a.type](sum, a) - applyOffer[b.type](sum, b))\n    .map(offer => (\n      [\n        offer,\n        applyOffer[offer.type](sum, offer)\n      ])\n    )\n}\n\nexport const findBestOffer = (cart: Array<Book>, offers: Array<Offer>) : [Offer, number] => sortOffer(cart, offers)[0]\n\n\n\n\n\n","import React, {useEffect, useState} from 'react';\nimport {Book} from 'App'\nimport {DOMAIN_URL} from 'domain/xebia'\nimport {findBestOffer} from 'utils/offer'\n\ninterface Props {\n  cart: Array<Book>\n}\n\nconst Header: React.FC<Props> = ({cart}) => {\n  const [price, setPrice]= useState<number>(0)\n  useEffect(()=>{\n    fetch(`${DOMAIN_URL}/books/${cart.map(b=>b.isbn).join(',')}/commercialOffers`)\n      .then(res => res.json())\n      .then(res=> setPrice(findBestOffer(cart, res.offers)[1]))\n    if(!cart.length) setPrice(0)\n  }, [cart])\n\n  return (\n    <header className=\"bg-gray-300 flex justify-around inset-y-0 sticky\">\n      <div/>\n      <h1 className=\"text-center text-4xl font-bold\">La bibliothèque d'Henri Potier</h1>\n      <div className=\"flex p-3\">\n        <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"w-10 h-10\">\n          <path\n            d=\"M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z\"/>\n        </svg>\n        <span className=\"pl-2 text-2xl\">{cart.length}</span>\n        <span className=\"pl-2 text-2xl\">{price}€</span>\n      </div>\n    </header>\n  )\n}\n\nexport default Header ","import React, {useState} from 'react';\nimport useSWR from 'swr'\nimport {fetcher} from './domain/xebia'\nimport BookCard from 'component/BookCard'\nimport Header from 'layout/Header'\n\nexport interface Book {\n  isbn: string\n  title: string\n  price: number\n  cover: string\n  synopsis: Array<string>\n}\n\nexport interface Offer {\n  type: \"percentage\" | \"minus\" | \"slice\"\n  value : number\n  sliceValue?: number\n}\n\nfunction App() {\n  const [cart, setCart] = useState<Array<Book>>([])\n\n  const {data: books, error: errBook} = useSWR<Array<Book>, object>('/books', fetcher)\n\n  const [search, setSearch] = useState<string>('')\n  const booksToDisplay: Array<Book> | undefined = books?.filter(book =>\n    book.title.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n    || book.isbn.toLocaleLowerCase().includes(search.toLocaleLowerCase())\n  )\n\n  return (\n    <>\n      <Header cart={cart}/>\n      <main>\n        <div className=\"my-5 mx-auto w-1/2\">\n          <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"search\">\n            Rechercher un livre\n          </label>\n          <input\n            onChange={(e) => setSearch(e.target.value)}\n            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n            id=\"search\" type=\"text\" placeholder=\"Titre, ISBN, ...\"/>\n        </div>\n        <div className=\"mx-auto w-2/3\">\n          {booksToDisplay?.map(book => <BookCard key={book.isbn} cart={cart} setCart={setCart} book={book}/>)}\n        </div>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './tailwind.output.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}